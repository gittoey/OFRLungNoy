// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;

$kids-typography: mat.define-typography-config(
  $font-family: "Kanit",
);
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core($kids-typography);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$AppOFRLungNoy-primary: mat.define-palette(mat.$indigo-palette);
$AppOFRLungNoy-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$AppOFRLungNoy-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$AppOFRLungNoy-theme: mat.define-light-theme(
  (
    color: (
      primary: $AppOFRLungNoy-primary,
      accent: $AppOFRLungNoy-accent,
      warn: $AppOFRLungNoy-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($AppOFRLungNoy-theme);

/* You can add global styles to this file, and also import other style files */
input[type="file"]::file-selector-button {
  display: none;
}
input[type="file"] {
  cursor: pointer;
}

.cdk-global-overlay-wrapper,
.cdk-overlay-container {
  z-index: 99999 !important;
}

.modal-body {
  border-top: 1px solid #a0a0a02c;
  border-bottom: 1px solid #a0a0a02c  ;
}

.mat-h4,
.mat-subheading-1,
.mat-typography h4 {
  font-size: 18px;
}